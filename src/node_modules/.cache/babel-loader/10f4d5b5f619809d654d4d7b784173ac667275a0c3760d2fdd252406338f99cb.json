{"ast":null,"code":"var _jsxFileName = \"E:\\\\FLASK  PROJECTS\\\\autocad-frontend\\\\front\\\\src\\\\components\\\\DeviceOptions.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useSWR from 'swr';\n\n// Define the API endpoint\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiEndpoint = 'http://195.35.11.199:5588/devices/listdevices'; // replace with your actual API endpoint\n\n// Define the fetcher function for SWR\nconst fetcher = url => fetch(url).then(res => {\n  if (!res.ok) {\n    console.log(`HTTP error! status: ${res.status}`);\n    throw new Error(`HTTP error! status: ${res.status}`);\n  }\n  return res.json();\n});\nconst DeviceOptions = () => {\n  _s();\n  // Use SWR to fetch data\n  const {\n    data,\n    error\n  } = useSWR(apiEndpoint, fetcher);\n\n  // Handle loading and error states\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Failed to load options.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 23\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    children: data.devices.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.deviceid,\n      children: [option.part_num, \" - \", option.description]\n    }, option.deviceid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(DeviceOptions, \"r2QYs02BSrn+Eu/1uMGZi8N+HnQ=\", false, function () {\n  return [useSWR];\n});\n_c = DeviceOptions;\nexport default DeviceOptions;\nvar _c;\n$RefreshReg$(_c, \"DeviceOptions\");","map":{"version":3,"names":["React","useSWR","jsxDEV","_jsxDEV","apiEndpoint","fetcher","url","fetch","then","res","ok","console","log","status","Error","json","DeviceOptions","_s","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","devices","map","option","value","deviceid","part_num","description","_c","$RefreshReg$"],"sources":["E:/FLASK  PROJECTS/autocad-frontend/front/src/components/DeviceOptions.js"],"sourcesContent":["import React from 'react';\r\nimport useSWR from 'swr';\r\n\r\n// Define the API endpoint\r\nconst apiEndpoint = 'http://195.35.11.199:5588/devices/listdevices'; // replace with your actual API endpoint\r\n\r\n// Define the fetcher function for SWR\r\nconst fetcher = (url) => fetch(url).then((res) => {\r\n    if (!res.ok) {\r\n        console.log(`HTTP error! status: ${res.status}`)\r\n        throw new Error(`HTTP error! status: ${res.status}`);\r\n    }\r\n    return res.json();\r\n});\r\n\r\nconst DeviceOptions = () => {\r\n    // Use SWR to fetch data\r\n    const { data, error } = useSWR(apiEndpoint, fetcher);\r\n\r\n    // Handle loading and error states\r\n    if (error) return <div>Failed to load options.</div>;\r\n    if (!data) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <select>\r\n            {data.devices.map((option) => (\r\n                <option key={option.deviceid} value={option.deviceid}>\r\n                    {option.part_num} - {option.description}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default DeviceOptions;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,KAAK;;AAExB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,+CAA+C,CAAC,CAAC;;AAErE;AACA,MAAMC,OAAO,GAAIC,GAAG,IAAKC,KAAK,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;EAC9C,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;IACTC,OAAO,CAACC,GAAG,CAAC,uBAAuBH,GAAG,CAACI,MAAM,EAAE,CAAC;IAChD,MAAM,IAAIC,KAAK,CAAC,uBAAuBL,GAAG,CAACI,MAAM,EAAE,CAAC;EACxD;EACA,OAAOJ,GAAG,CAACM,IAAI,CAAC,CAAC;AACrB,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGlB,MAAM,CAACG,WAAW,EAAEC,OAAO,CAAC;;EAEpD;EACA,IAAIc,KAAK,EAAE,oBAAOhB,OAAA;IAAAiB,QAAA,EAAK;EAAuB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACpD,IAAI,CAACN,IAAI,EAAE,oBAAOf,OAAA;IAAAiB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEvC,oBACIrB,OAAA;IAAAiB,QAAA,EACKF,IAAI,CAACO,OAAO,CAACC,GAAG,CAAEC,MAAM,iBACrBxB,OAAA;MAA8ByB,KAAK,EAAED,MAAM,CAACE,QAAS;MAAAT,QAAA,GAChDO,MAAM,CAACG,QAAQ,EAAC,KAAG,EAACH,MAAM,CAACI,WAAW;IAAA,GAD9BJ,MAAM,CAACE,QAAQ;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpB,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEjB,CAAC;AAACP,EAAA,CAjBID,aAAa;EAAA,QAESf,MAAM;AAAA;AAAA+B,EAAA,GAF5BhB,aAAa;AAmBnB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}